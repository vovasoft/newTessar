package com.vova.tessarwebserver.controler;

import com.sun.org.apache.bcel.internal.generic.NEWARRAY;
import com.vova.tessarwebserver.dbmapper.AllInOneMapper;
import com.vova.tessarwebserver.domain.newadd.NewAdd;
import com.vova.tessarwebserver.domain.payment.PayAllShow;
import com.vova.tessarwebserver.domain.payment.PayMentJson;
import com.vova.tessarwebserver.domain.payrate.ThreeNum;
import com.vova.tessarwebserver.domain.payrate.ThreeNumJson;
import com.vova.tessarwebserver.domain.stayman.StayJson;
import com.vova.tessarwebserver.domain.stayman.StayParent;
import com.vova.tessarwebserver.util.Tools;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

/**
 * @author: Vova
 * @create: date 9:44 2018/1/2
 */

@RestController
@RequestMapping("/pay")
public class ControlerPay {
    @Autowired
    private AllInOneMapper allInOneMapper;
    static SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");

    @GetMapping("/getPayDate")
    @ResponseBody
//    Object getPayDate(@RequestBody RequestData dataString) throws ParseException {
    Object getPayDate(@RequestParam String app,@RequestParam String cid,@RequestParam String gid,@RequestParam String sid,@RequestParam String sDate,@RequestParam String eDate) throws ParseException {
        List<PayAllShow> payList = null;
        payList = allInOneMapper.findCGSPayAllShowByTimes(app,
                cid!=""?cid:null,
                gid!=""?gid:null,
                sid!=""?sid:null,sdf.parse(sDate),sdf.parse(eDate));
        ArrayList<PayMentJson> nj = new ArrayList<>();
        for (int i=0;i<payList.size();i++) {
            PayAllShow pay = payList.get(i);
            nj.add(new PayMentJson(sdf.format(pay.getDateID()),pay.getNewAddNum(),pay.getNewAddPayPlayerNum(),pay.getNewAddPayAllMoney(),
                    pay.getNewAddPlayerARPPU(),pay.getNewAddPayPlayerARPPU(),pay.getNewPayPlayerNum(),pay.getNewPayAllMoney(),
                    pay.getAverageNewPayMoney(),pay.getActiveNum(),pay.getPayPlayerNum(),pay.getTodayAllPayMoney(),pay.getActiveARPPU(),
                    pay.getPayPlayerARPPU(),pay.getAllMoney()));
        }
        return nj;
    }

    @GetMapping("/getPayRateDate")
    @ResponseBody
    Object getPayRateDate(@RequestParam String app,@RequestParam String cid,@RequestParam String gid,@RequestParam String sid,@RequestParam String sDate,@RequestParam String eDate) throws ParseException {
        List<ThreeNum> tn = null;
        List<NewAdd> newAddList = null;

        String[] subStr = app.split("ThreeNum");
        if (subStr.length != 2 ) {
            return "error, appString is not right!!!!";
        }
        tn = allInOneMapper.findThreeNumByTimes(app,
                cid!=""?cid:null,
                gid!=""?gid:null,
                sid!=""?sid:null,sdf.parse(sDate),sdf.parse(eDate));

        ArrayList<ThreeNumJson> snj = new ArrayList<>();
        for (int i=0;i<tn.size();i++) {
            ThreeNum tmp = tn.get(i);
            Date tmpDate = tmp.getDateID();
            newAddList = allInOneMapper.findCGSNewAddListByTimes("NewAdd"+subStr[1],
                    cid != "" ? cid : null,
                    gid != "" ? gid : null,
                    sid != "" ? sid : null, tmpDate, tmpDate);
            snj.add(new ThreeNumJson(sdf.format(tmp.getDateID()),tmp.getcID(),tmp.getgID(),tmp.getsID(),
                    tmp.getNewAddFirstPayNum(),
                    Tools.floatToScaleStr(newAddList.size()==0||newAddList.get(0).getActiveNum()==0?0:(float)tmp.getactivePayNum()/newAddList.get(0).getActiveNum()),
                    Tools.floatToScaleStr(tmp.getNewAddPayRate())));
            break;

        }
        return snj;
    }


    @GetMapping("/getPayStayDate")//留存表的一些处理，其中需要返回json的时候，最好将留存字段改写成数组的形式，如下所示，最长的那行代码。
    @ResponseBody
    Object getPayStayDate(@RequestParam String app,@RequestParam String cid,@RequestParam String gid,@RequestParam String sid,@RequestParam String sDate,@RequestParam String eDate) throws ParseException {

        List<StayParent> spList =  allInOneMapper.findCGSStayListByTimes(app,
                cid!=""?cid:null,
                gid!=""?gid:null,
                sid!=""?sid:null,sdf.parse(sDate),sdf.parse(eDate));
        ArrayList<StayJson> sj = new ArrayList<>();
        for (int i=0;i<spList.size();i++) {
            StayParent sp = spList.get(i);
//            sj.add(new StayJson(sdf.format(sp.getDateID()),sp.getNewAddNum(),Tools.strToNumArrayScale(sp.getStayList(),",",sp.getNewAddNum()), Tools.strToNumArray(sp.getStayList(),",")));
            String [] combinStr=Tools.combine2Str(Tools.strToNumArrayScale(sp.getStayList(), ",", sp.getNewAddNum()), Tools.strToStrArray(sp.getStayList(), ","));
            sj.add(new StayJson(sdf.format(sp.getDateID()), sp.getNewAddNum(),combinStr));
        }

        return sj;
    }

    @GetMapping("/getPayStayDateOnly")//留存表的一些处理，其中需要返回json的时候，最好将留存字段改写成数组的形式，如下所示，最长的那行代码。
    @ResponseBody
    Object getPayStayDateOnly(@RequestParam String app,@RequestParam String cid,@RequestParam String gid,@RequestParam String sid,@RequestParam String sDate,@RequestParam String eDate) throws ParseException {

        List<StayParent> spList =  allInOneMapper.findCGSStayListByTimes(app,
                cid!=""?cid:null,
                gid!=""?gid:null,
                sid!=""?sid:null,sdf.parse(sDate),sdf.parse(eDate));
        ArrayList<StayJson> sj = new ArrayList<>();
        for (int i=0;i<spList.size();i++) {
            StayParent sp = spList.get(i);
            sj.add(new StayJson(sdf.format(sp.getDateID()),sp.getNewAddNum(),Tools.strToStrArray(sp.getStayList(),",")));
        }

        return sj;
    }


}
