package com.vova.tessarwebserver.dbmapper;


import com.vova.tessarwebserver.Scheduled.Fb_Ad;
import com.vova.tessarwebserver.domain.User;
import com.vova.tessarwebserver.domain.channel.ChannelFactory;
import com.vova.tessarwebserver.domain.initdata.CreateChannelRule;
import com.vova.tessarwebserver.domain.initdata.MainChannel;
import com.vova.tessarwebserver.domain.initdata.SelectList;
import com.vova.tessarwebserver.domain.initdata.SubChannel;
import com.vova.tessarwebserver.domain.newadd.NewAdd;
import com.vova.tessarwebserver.domain.payment.PayAllShow;
import com.vova.tessarwebserver.domain.payrate.ThreeNum;
import com.vova.tessarwebserver.domain.stayman.StayParent;
import org.apache.ibatis.annotations.*;

import java.util.Date;
import java.util.List;

/**
 * @author: Vova
 * @create: date 15:40 2017/12/29
 */
//    @Select("<script>" +
//            "select * from ${tableName} " +
//            "where gID = #{gid} AND sID = #{sid} " +
//            "<![CDATA[AND dateID >= #{sDate} AND dateID <= #{eDate}]]>" +
//            "<if test='cid!=null'>" +
//            " and  cID = #{cid}" +
//            "</if>" +
//            "</script>")
@Mapper
public interface AllInOneMapper {
    //新增数据多条件查找
    @Select("<script> " +
            "SELECT * " +
            "from ${tableName} " +
            " where <![CDATA[dateID >= #{sDate} AND dateID <= #{eDate}]]>" +
            " <if test= 'cid != null'> AND cID=#{cid}</if> " +
            " <if test= 'gid != null'> AND gID=#{gid}</if> " +
            " <if test= 'sid != null'> AND sID=#{sid}</if> " +
            " order by dateID desc" +
            " </script> ")
//    List<NewAddDay> findCGSNewAddListByTimes(@Param("tableName") String tableName, @Param("cid") String cid, @Param("gid") String gid,
    List<NewAdd> findCGSNewAddListByTimes(@Param("tableName") String tableName, @Param("cid") String cid, @Param("gid") String gid,
                                          @Param("sid") String sid, @Param("sDate") Date sDate, @Param("eDate") Date eDate);

//    @Select("select * from ${tableName} where dateID >= #{sDate} AND dateID <= #{eDate} ")
//    List<NewAddDay> findAllNewAddListByTimes(@Param("tableName") String tableName, @Param("sDate") Date sDate, @Param("eDate") Date eDate);

    @Select("<script>" +
            "select * from ${tableName} where " +
            "<![CDATA[dateID >= #{sDate} AND dateID <= #{eDate}]]>" +
            " <if test= 'cid != null'> AND cID=#{cid}</if> " +
            " <if test= 'gid != null'> AND gID=#{gid}</if> " +
            " <if test= 'sid != null'> AND sID=#{sid}</if> " +
            " order by dateID desc" +
            "</script>")
    List<StayParent> findCGSStayListByTimes(@Param("tableName") String tableName, @Param("cid") String cid, @Param("gid") String gid,
                                            @Param("sid") String sid, @Param("sDate") Date sDate, @Param("eDate") Date eDate);

//    @Select("select * from ${tableName} where dateID >= #{sDate} AND dateID <= #{eDate} ")
//    List<StayParent> findStayListByTimes(@Param("tableName") String tableName, @Param("sDate") Date sDate, @Param("eDate") Date eDate);

    //由于数据库中的接口一样，所以这里tableName代替其他两个表的表名
    @Select("select * from ${tableName}")
    List<SelectList> findCGS(@Param("tableName") String tableName);

    @Select("select distinct name from ${tableName} where fathername = #{name}")
    List<String> findCidsByFather(@Param("tableName") String tableName, @Param("name") String name);

    //gid sid
    @Insert("insert into ${tableName} (name) value(#{name})")
    int InsertCGS(@Param("tableName") String tableName, @Param("name") String name);

    //cid
    @Insert("insert into ${tableName} (name,fathername) values(#{name}, #{fathercid})")
    int InsertCID(@Param("tableName") String tableName, @Param("name") String name, @Param("fathercid") String fathercid);


    @Insert("insert into AdFb (account_currency,account_name,ad_id," +
            "ad_name,adset_id,adset_name,campaign_id,campaign_name," +
            "clicks,ctr,date_start,date_stop,impressions,spend," +
            "total_action_value)" +
            " values(#{account_currency},#{account_name},#{ad_id}," +
            "#{ad_name},#{adset_id},#{adset_name},#{campaign_id}," +
            "#{campaign_name},#{clicks},#{ctr},#{date_start},#{date_stop},#{impressions},#{spend}," +
            "#{total_action_value})")
    int InsertFB(Fb_Ad fb_ad);

    @Select("select * from AdFb where date_start = #{date_start} and ad_id = #{ad_id}")
    List<Fb_Ad> findFb_Ad(@Param("date_start") String date_start, @Param("ad_id") String ad_id);

    @Update("UPDATE AdFb SET " +
            "account_currency=#{account_currency}," +
            "account_name=#{account_name}," +
            "ad_name=#{ad_name}," +
            "adset_id=#{adset_id}," +
            "adset_name=#{adset_name}," +
            "campaign_id=#{campaign_id}," +
            "campaign_name=#{campaign_name}," +
            "clicks=#{clicks}," +
            "ctr=#{ctr}," +
            "impressions=#{impressions}," +
            "spend=#{spend}," +
            "total_action_value=#{total_action_value}" +
            " where date_start = #{date_start} and ad_id = #{ad_id}")
    int updateFb_Ad(Fb_Ad fb_ad);


    @Delete("DELETE FROM ${tableName} where id = #{id}")
    int deleteCGS(@Param("tableName") String tableName, @Param("id") int id);

    @Update("UPDATE ${tableName} SET fathername=#{fathername} where name=#{name}")
    int updateCGS(@Param("tableName") String tableName, @Param("name") String name, @Param("fathername") String fathername);

    //
    @Select("<script>" +
            "select * from ${tableName} where " +
            "<![CDATA[dateID >= #{sDate} AND dateID <= #{eDate}]]>" +
            " <if test= 'cid != null'> AND cID=#{cid}</if> " +
            " <if test= 'gid != null'> AND gID=#{gid}</if> " +
            " <if test= 'sid != null'> AND sID=#{sid}</if> " +
            " order by dateID desc" +
            "</script>")
    List<PayAllShow> findCGSPayAllShowByTimes(@Param("tableName") String tableName, @Param("cid") String cid, @Param("gid") String gid,
                                              @Param("sid") String sid, @Param("sDate") Date sDate, @Param("eDate") Date eDate);

    @Select("<script>" +
            "select * from ${tableName} where " +
            "<![CDATA[dateID >= #{sDate} AND dateID <= #{eDate}]]>" +
            " <if test= 'cid != null'> AND cID=#{cid}</if> " +
            " <if test= 'gid != null'> AND gID=#{gid}</if> " +
            " <if test= 'sid != null'> AND sID=#{sid}</if> " +
            " order by dateID desc" +
            "</script>")
    List<ThreeNum> findThreeNumByTimes(@Param("tableName") String tableName, @Param("cid") String cid, @Param("gid") String gid,
                                       @Param("sid") String sid, @Param("sDate") Date sDate, @Param("eDate") Date eDate);
//    @Select("select * from ${tableName} where  dateID >= #{sDate} AND dateID <= #{eDate} ")
//    List<PayAllShow> findPayAllShowByTimes(@Param("tableName") String tableName, @Param("sDate") Date sDate, @Param("eDate") Date eDate);

    @Select("select * from user where name = #{name}")
    List<User> findUserList(@Param("name") String name);

    @Select("select * from user where name = #{name} and passwd=#{passwd}")
    List<User> checkUser(@Param("name") String name, @Param("passwd") String passwd);

    @Insert("insert into user (name,passwd) values(#{name},#{passwd})")
    int insertUser(@Param("name") String name, @Param("passwd") String passwd);


    @Insert("insert into ChannelFactory (cid,pcid,img,des,tags) values(#{cid},#{pcid},#{img},#{des},#{tags})")
    int insertChannel(ChannelFactory channelFactory);

    @Select("select * from ChannelFactory where cid = #{cid} ")
    List<ChannelFactory> findchannel(@Param("cid") String cid);
//////////////////////////////////////////////

    @Select("select * from MainChannel")
    List<MainChannel> getMainChannel();

    @Select("select * from CreateChannelRule")
    List<CreateChannelRule> getCreateChannelRule();


    @Insert("insert into SubChannel (mainChannel,longUrl,shortUrl,keyWords) values(#{mainChannel},#{longUrl},#{shortUrl},#{keyWords})")
    int insertSubChannel(@Param("mainChannel") String mainChannel,
                         @Param("longUrl") String longUrl,
                         @Param("shortUrl") String shortUrl,
                         @Param("keyWords") String keyWords);

    @Select("select * from SubChannel where mainChannel = #{mainChannel} and keyWords=#{keyWords}")
    List<SubChannel> getSubChannel(@Param("mainChannel") String mainChannel,@Param("keyWords") String keyWords);

}


